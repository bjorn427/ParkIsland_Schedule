/* style.css */

:root {
    --app-accent-color: #498189;
    --app-accent-color-darker: #3A6B73;
    --app-nav-background: #eff5f6;
    --app-nav-icon-active-bg: #CDE2F0; 
    --app-icon-active-color: white; 
    --app-icon-inactive-color: #6B7280; 
    --app-text-active-color: var(--app-accent-color); 
    --app-text-inactive-color: #6B7280; 
    --app-select-background: #eff5f6; 
}

html, body {
    font-family: 'Inter', sans-serif;
    background-color: #f7f7f7; 
    color: #333333; 
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow: hidden;
    height: auto;
}

/* 
 * FIX: This is the new class to handle dynamic viewport height on mobile.
 * It uses 100dvh, which adjusts to the browser's visible area.
*/
.h-dvh-screen {
    height: 100vh; /* Fallback for older browsers */
    height: 100dvh; /* The modern solution for dynamic height */
}

body {
    display: flex;
    flex-direction: column;
}

main {
    flex-grow: 1;
    overflow-y: auto;
    padding: 1rem;
    padding-bottom: 0; 
}

::-webkit-scrollbar {
    width: 6px;
    height: 6px;
}
::-webkit-scrollbar-track {
    background: transparent; 
}
::-webkit-scrollbar-thumb {
    background: #cccccc; 
    border-radius: 3px;
}

/* --- TYPOGRAPHY & COMPONENT CLASSES --- */

.card-title {
    font-size: 1rem;
    font-weight: 600;
    color: #1F2937;
    margin-bottom: 0.5rem;
}

.time-card-style {
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-bottom: 0.75rem;
}

.time-display {
    font-size: 1.3rem;
    line-height: 2rem;
    font-weight: 600;
    color: #111827;
}

.date-display {
    font-size: 0.875rem;
    line-height: 1.25rem;
    color: #6B7280;
    margin-top: 0.125rem;
}

.content-card {
    padding: 1rem;
    display: flex;
    flex-direction: column;
}

.direction-header {
    font-size: 0.875rem;
    font-weight: 600;
    color: #4B5563;
    padding-bottom: 0.25rem;
}

.divider-line {
    border-bottom-width: 1px;
    border-color: #e5e7eb;
    margin-bottom: 0.375rem;
}

.arrivals-list {
    margin-top: 0.1rem;
    color: #374151;
}

.settings-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 600;
    color: #374151;
    margin-bottom: 0.5rem;
}

/* Bottom Navigation Styling */
.bottom-nav-ive {
    background-color: var(--app-nav-background); 
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-top: 1px solid rgba(0, 0, 0, 0.08); 
    flex-shrink: 0; 
}

.bottom-nav-button {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding-top: 6px; 
    padding-bottom: 4px;
    flex: 1;
    transition: color 0.2s ease-in-out;
}
.bottom-nav-icon-wrapper {
    width: 56px; 
    height: 32px; 
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 16px; 
    margin-bottom: 1px; 
    transition: background-color 0.2s ease-in-out;
}
.bottom-nav-button svg {
    stroke: var(--app-icon-inactive-color);
    transition: stroke 0.2s ease-in-out;
    width: 24px; 
    height: 24px; 
}
.bottom-nav-button .nav-text {
    font-size: 0.75rem; 
    color: var(--app-text-inactive-color);
    transition: color 0.2s ease-in-out, font-weight 0.2s ease-in-out;
}

.bottom-nav-button.active .bottom-nav-icon-wrapper {
    background-color: var(--app-nav-icon-active-bg);
}
.bottom-nav-button.active svg {
    stroke: var(--app-accent-color); 
}
.bottom-nav-button.active .nav-text {
    color: var(--app-text-active-color); 
    font-weight: 600; 
}
    
/* Content Pane Transitions */
.content-pane {
    display: none; 
    opacity: 0;
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    height: 100%; 
}
/* 
 * FIX 1: Make the active content pane a flex container that can grow.
*/
.content-pane.active {
    display: flex; 
    flex-direction: column;
    opacity: 1;
    /* This allows the pane to grow and shrink as needed. */
    flex-grow: 1;
    /* This is crucial for flex children with overflow. */
    min-height: 0; 
}
/* Custom Card Style */
.card-ive {
    background-color: #ffffff; 
    border-radius: 10px; 
    border: 1px solid #e8e8e8; 
}

.button-ive {
    background-color: var(--app-accent-color);
    color: #ffffff; 
    transition: background-color 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    font-weight: 600;
    border-radius: 8px; 
    padding: 0.55rem 1rem; 
    text-transform: none; 
    letter-spacing: normal;
    font-size: 0.875rem
}

.button-ive:hover {
    background-color: var(--app-accent-color-darker);
}

.segmented-control-container {
    display: flex;
    background-color: #e9ecef; 
    border-radius: 8px;
    padding: 1px;
    width: 100%; 
}
.schedule-type-segment {
    padding: 0.25rem 0.75rem; 
    border-radius: 6px; 
    background-color: transparent;
    color: #495057; 
    font-size: 0.8rem; 
    font-weight: 600;
    cursor: pointer;
    transition: all 0.25s cubic-bezier(0.4,0,0.2,1);
    text-align: center;
    flex-grow: 1; 
}
.schedule-type-segment.active { 
    background-color: #ffffff; 
    color: var(--app-accent-color);
    box-shadow: 0 1px 3px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.06); 
}

/* --- FINAL VERSION: STYLES FOR STICKY COLUMN SCHEDULE GRID (Scrolling Fixed) --- */

/* 1. This new wrapper makes the header and divider stick together. */
#schedule-header-wrapper {
    position: sticky;
    top: 0;
    z-index: 20;
    background-color: #ffffff;
    /* FIX: Ensure the header does not shrink when space is limited. */
    flex-shrink: 0;
}

/* 2. The Header Block (No border, no sticky positioning itself) */
#static-schedule-fixed-header {
    display: flex;
    font-weight: 600;
    font-size: 0.875rem;
    color: #4B5563;
    padding-top: 0rem;
    padding-bottom: 0.1rem;
}
#static-schedule-fixed-header > div:first-child {
    width: 35px; /* --- EDIT this to control the Hour column width --- */
    text-align: left;
}
#static-schedule-fixed-header > div:nth-child(2) {
    flex-grow: 1;
    text-align: left;
    padding-left: 0.75rem; 
}

/* 3. The New, Separate Divider Element */
#schedule-header-divider {
    height: 1.5px;
    background-color: #d3d3d3; 
}

/* 4. The Data Grid Container */
#static-bus-schedule-table-container {
    display: grid;
    padding: 0rem;
    grid-template-columns: 35px 1fr; /* This MUST match the header's "Hour" width */
    /* FIX: Restore the vertical scrollbar. This is the key fix. */
    overflow-y: auto;
    overflow-x: auto; 
    /* FIX: This ensures the container grows to fill the remaining space. */
    flex-grow: 1;
}

/* 5. The Sticky Column (Hour numbers) */
.schedule-sticky-col {
    position: sticky;
    left: 0;
    background-color: #ffffff;
    z-index: 10;
}

/* 6. Styling for the "Hour" data cells */
.schedule-hour-cell {
    font-weight: 500;
    color: #1F2937;
    border-bottom: 1px solid #f3f4f6;
    font-size: 0.8rem;
    text-align: left;
    
    /* --- FIX: Using Flexbox for perfect vertical centering --- */
    display: flex;
    align-items: center; /* This vertically centers the hour number. */
}

/* 7. Styling for the "Minutes" data cells */
.schedule-minutes-cell {
    padding: 0.15rem 0.17rem 0.15rem;
    border-bottom: 1px solid #f3f4f6;
    white-space: nowrap; 
    font-size: 0.5rem;
}

/* 8. Styling for the individual minute numbers */
.schedule-minutes-cell .minute-item {
    display: inline-block;
    margin-right: 0.75rem;
    font-weight: 400;
    color: #374151;
    font-size: 0.8rem;
}

/* 
 * FIX 2: This is the most important rule. It targets the schedule card
 * and forces it to fill all available vertical space.
*/
#schedule-pane .card-ive:last-child {
    display: flex;
    flex-direction: column;
    /* This tells the card to grow and take up the remaining empty space. */
    flex-grow: 1; 
    /* This prevents overflow issues with its flex children. */
    min-height: 0;
}

/* The sticky header's wrapper */
#schedule-header-wrapper {
    position: sticky;
    top: 0;
    z-index: 20;
    background-color: #ffffff;
    flex-shrink: 0; /* Prevents the header from shrinking */
    padding-bottom: 0.1rem;
}

/* 
 * FIX 3: Ensure the data grid container grows within the card.
*/
#static-bus-schedule-table-container {
    display: grid;
    grid-template-columns: 45px 1fr;
    /* This now correctly enables the vertical scrollbar because its parent has a defined height. */
    overflow-y: auto;
    overflow-x: auto; 
    /* This tells the grid to grow and take the space given to it by the card. */
    flex-grow: 1;
}